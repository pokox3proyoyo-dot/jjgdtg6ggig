// netlify/send.js

let messages = [];
let currentId = 1;

// –ï—Å–ª–∏ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Netlify Environment Variables (ENV):
// –≠—Ç–æ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç–µ —ç—Ç–æ –≤ Netlify UI/CLI.
// const MESSAGE_STORAGE = process.env.MESSAGE_STORAGE || '[]'; 
// messages = JSON.parse(MESSAGE_STORAGE);

exports.handler = async (event) => {
    if (event.httpMethod !== 'POST') {
        return { statusCode: 405, body: 'Method Not Allowed' };
    }

    try {
        const data = JSON.parse(event.body);
        const { sessionId, encryptedMessage, sender } = data;

        if (!sessionId || !encryptedMessage) {
            return { statusCode: 400, body: JSON.stringify({ ok: false, description: "Missing data" }) };
        }

        // 1. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        const newMessage = {
            id: currentId++,
            sessionId,
            encryptedMessage,
            sender,
            timestamp: Date.now()
        };

        // 2. üõë –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤–µ (–í–†–ï–ú–ï–ù–ù–û–ï –ù–ï–ù–ê–î–ï–ñ–ù–û–ï –•–†–ê–ù–ò–õ–ò–©–ï)
        messages.push(newMessage);
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏—è –ø–∞–º—è—Ç–∏
        if (messages.length > 50) {
            messages.shift();
        }

        // –ï—Å–ª–∏ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ ENV:
        // process.env.MESSAGE_STORAGE = JSON.stringify(messages);

        return {
            statusCode: 200,
            body: JSON.stringify({ ok: true, messageId: newMessage.id }),
        };
    } catch (error) {
        console.error('Send Function Error:', error);
        return {
            statusCode: 500,
            body: JSON.stringify({ ok: false, description: 'Internal Server Error' }),
        };
    }
};
